from TestUtil import *

#===========================================================

NBITS = 8

#===========================================================

async def check(dut, a, b, out: []):
  dut.a.value = a
  dut.b.value = b

  await Timer(1, units="ns")

  for i in range(NBITS):
    assert (dut.out[i].value == out[i]),           \
      "[FAILED] dut.out[{}] != out[{}] ({} != {})" \
      .format(i, i, dut.out[i].value, bin(out[i]))

#===========================================================

@cocotb.test()
async def test_case_1_simple_zeros(dut):
  a   = 0b00000000
  b   = 0b00000000
  out = [
    0b0000000110000000,
    0b0000000100000000,
    0b0000001000000000,
    0b0000010000000000,
    0b0000100000000000,
    0b0001000000000000,
    0b0010000000000000,
    0b1011111110000000
  ]

  await check(dut, a, b, out)

#===========================================================

@cocotb.test()
async def test_case_2_simple_ones(dut):
  a   = 0b11111111
  b   = 0b11111111
  out = [
    0b0000000101111111,
    0b0000000011111110,
    0b0000000111111100,
    0b0000001111111000,
    0b0000011111110000,
    0b0000111111100000,
    0b0001111111000000,
    0b1100000000000000
  ]

  await check(dut, a, b, out)

#===========================================================